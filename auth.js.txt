import { USE_FIREBASE, firebaseConfig } from '../firebase-config.js';

let app, auth, db;

export async function initAuth() {
  if (!USE_FIREBASE) return;
  const { initializeApp } = await import('https://www.gstatic.com/firebasejs/9.22.1/firebase-app.js');
  const { getAuth } = await import('https://www.gstatic.com/firebasejs/9.22.1/firebase-auth.js');
  const { getFirestore } = await import('https://www.gstatic.com/firebasejs/9.22.1/firebase-firestore.js');
  app = initializeApp(firebaseConfig);
  auth = getAuth(app);
  db = getFirestore(app);
}

export async function registerUser(email, password, role) {
  const { createUserWithEmailAndPassword } = await import('https://www.gstatic.com/firebasejs/9.22.1/firebase-auth.js');
  const { doc, setDoc } = await import('https://www.gstatic.com/firebasejs/9.22.1/firebase-firestore.js');
  const cred = await createUserWithEmailAndPassword(auth, email, password);
  await setDoc(doc(db, 'users', cred.user.uid), { email, role });
  return { uid: cred.user.uid, role };
}

export async function loginUser(email, password) {
  const { signInWithEmailAndPassword } = await import('https://www.gstatic.com/firebasejs/9.22.1/firebase-auth.js');
  const { doc, getDoc } = await import('https://www.gstatic.com/firebasejs/9.22.1/firebase-firestore.js');
  const cred = await signInWithEmailAndPassword(auth, email, password);
  const snap = await getDoc(doc(db, 'users', cred.user.uid));
  return { uid: cred.user.uid, role: snap.data().role };
}

export async function signOutUser() {
  const { signOut } = await import('https://www.gstatic.com/firebasejs/9.22.1/firebase-auth.js');
  await signOut(auth);
}
