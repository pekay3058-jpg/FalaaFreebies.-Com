// js/taker.js
import { auth, db } from "./firebase-init.js";
import {
  collection,
  getDocs,
  query,
  where
} from "https://www.gstatic.com/firebasejs/11.0.1/firebase-firestore.js";

const searchInput = document.getElementById("searchInput");
const browseCategories = document.getElementById("browseCategories");
const browseResults = document.getElementById("browseResults");
const logoutBtn = document.getElementById("logoutBtn");

// Load available items
async function loadItems(filter = {}) {
  browseResults.innerHTML = "<p>Loading items...</p>";
  let q = collection(db, "items");

  const snap = await getDocs(q);
  let items = snap.docs.map(doc => doc.data());

  // Apply filters
  if (filter.category) {
    items = items.filter(item => item.category === filter.category);
  }
  if (filter.search) {
    const term = filter.search.toLowerCase();
    items = items.filter(item => item.name.toLowerCase().includes(term));
  }

  // Display results
  if (items.length === 0) {
    browseResults.innerHTML = "<p>No items found.</p>";
    return;
  }

  browseResults.innerHTML = "";
  items.forEach(item => {
    const div = document.createElement("div");
    div.className = "item";
    div.innerHTML = `<strong>${item.name}</strong><br>${item.desc || ""}`;
    browseResults.appendChild(div);
  });
}

// Event listeners
searchInput.addEventListener("input", () => {
  loadItems({ search: searchInput.value, category: browseCategories.value });
});
browseCategories.addEventListener("change", () => {
  loadItems({ search: searchInput.value, category: browseCategories.value });
});
logoutBtn.addEventListener("click", () => {
  auth.signOut();
});

// Initial load
loadItems();